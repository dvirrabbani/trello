/* Breakpoint mixins */

@mixin for-mobile-layout {
  @media (max-width: calc($mobile-breakpoint + 40px)) {
    @content;
  }
}

@mixin for-narrow-layout {
  @media (min-width: calc($mobile-breakpoint + 40px)) {
    @content;
  }
}

@mixin for-normal-layout {
  @media (min-width: calc($narrow-breakpoint + 40px)) {
    @content;
  }
}

@mixin for-wide-layout {
  @media (min-width: calc($normal-breakpoint + 40px)) {
    @content;
  }
}

/* Typography mixins */
@mixin typography($type: "h1", $color: $color-txt-primary) {
  color: $color;
  @if $type == "h1" {
    font-size: rem(18px);
    line-height: rem(32px);
    font-weight: 700;
  } @else if $type == "h2" {
    font-size: rem(14px);
    line-height: rem(20px);
    font-weight: 600;
  } @else if $type == "h3" {
    font-size: rem(12px);
    line-height: rem(16px);
    font-weight: 600;
  } @else if $type == "txt" {
    font-size: rem(14px);
    line-height: rem(20px);
    font-weight: 400;
  } @else if $type == "sub-txt" {
    font-size: rem(11px);
    line-height: rem(14px);
    font-weight: 400;
  }
}

@mixin btn($bg-color: unset, $width: unset, $borderRadius: 0, $padding: 6px) {
  display: inline-flex;
  align-items: center;
  text-decoration: none;
  white-space: normal;
  border: none;
  cursor: pointer;
  transition-property: background-color, border-color, box-shadow;
  transition-duration: 85ms;
  transition-timing-function: ease;
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", "Roboto",
    "Noto Sans", Ubuntu, "Droid Sans", "Helvetica Neue", fantasy;
  gap: rem(8px);
  background-color: $bg-color;
  width: $width;
  border-radius: $borderRadius;
  padding: $padding;
}

/* Media  Mixins */
@mixin aspect-ratio($width, $height) {
  position: relative;
  overflow: hidden;
  &::before {
    display: block;
    content: "";
    width: 100%;
    padding-top: calc(($height / $width) * 100%);
  }
  > * {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
  }

  > img {
    height: 100%;
    object-fit: cover;
  }
}

// Mixin for removing hover efects on iphone screen
@mixin hover-supported {
  @media not all and (pointer: coarse) {
    &:hover {
      @content;
    }
  }
}

@mixin size($size) {
  width: rem($size);
  height: rem($size);
}

@mixin flex-center() {
  display: flex;
  justify-content: center;
  align-items: center;
}
